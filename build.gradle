buildscript {
    repositories {
        maven {
            url "https://plugins.gradle.org/m2/"
        }
    }
    dependencies {
        classpath "org.jmailen.gradle:kotlinter-gradle:$kotlinLinterVer"
    }
}

plugins {
    id "org.jetbrains.kotlin.jvm" version "$kotlinVer"
    id 'org.jmailen.kotlinter' version "$kotlinLinterVer"
}

allprojects {
    repositories {
        mavenCentral()
        maven { url 'https://jitpack.io' }
        flatDir {
            dirs "${project.rootDir}/libs"
        }
    }
}

subprojects {
    apply plugin: "org.jetbrains.kotlin.jvm"
    apply plugin: 'maven'
    apply plugin: "org.jmailen.kotlinter"

    group = 'jp.co.soramitsu.iroha-java'
    version = '0.0.1-SNAPSHOT'

    dependencies {
        api fileTree(dir: 'libs', include: ['*.jar'])
        testImplementation "org.jetbrains.kotlin:kotlin-test-junit5:$kotlinVer"
    }

    test {
        useJUnitPlatform()
    }

    java {
        withJavadocJar()
        withSourcesJar()
    }

    jar {
        from {
            configurations.runtimeClasspath
            //todo remove it as soon as will be own implementation of scale codec
                    .filter { it.name.contains("polkaj-scale") }
                    .collect {
                        it.isDirectory() ? it : zipTree(it)
                    }
        }
    }

    compileKotlin {
        kotlinOptions {
            freeCompilerArgs = ["-Xjsr305=strict"]
            jvmTarget = 11
        }
    }

    compileTestKotlin {
        kotlinOptions {
            freeCompilerArgs = ["-Xjsr305=strict"]
            jvmTarget = 11
        }
    }

    kotlinter {
        ignoreFailures = false
        indentSize = 4
        reporters = ['checkstyle', 'plain']
        experimentalRules = false
        disabledRules = []
    }
}

check {
    dependsOn "installKotlinterPrePushHook"
}
