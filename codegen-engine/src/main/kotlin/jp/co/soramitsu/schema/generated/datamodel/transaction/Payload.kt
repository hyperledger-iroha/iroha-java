// Do not change. Autogenerated code
package jp.co.soramitsu.schema.generated.datamodel.transaction

import io.emeraldpay.polkaj.scale.ScaleCodecReader
import io.emeraldpay.polkaj.scale.ScaleCodecWriter
import io.emeraldpay.polkaj.scale.ScaleReader
import io.emeraldpay.polkaj.scale.ScaleWriter
import jp.co.soramitsu.schema.generated.datamodel.Value
import jp.co.soramitsu.schema.generated.datamodel.account.Id
import jp.co.soramitsu.schema.generated.datamodel.isi.Instruction
import kotlin.Int
import kotlin.String
import kotlin.Unit
import kotlin.collections.List
import kotlin.collections.Map

/**
 * Payload
 *
 * Generated from 'iroha_data_model::transaction::Payload' regular structure
 */
public class Payload(
  private val accountId: Id,
  private val instructions: List<Instruction>,
  private val creationTime: Int,
  private val timeToLiveMs: Int,
  private val metadata: Map<String, Value>
) {
  public companion object : ScaleReader<Payload>, ScaleWriter<Payload> {
    public override fun read(reader: ScaleCodecReader): Payload =
        Payload(jp.co.soramitsu.schema.generated.datamodel.account.Id.read(reader),
        reader.read(io.emeraldpay.polkaj.scale.reader.ListReader(Instruction)),
        reader.readLong().toInt(), reader.readLong().toInt(),
        reader.read(jp.co.soramitsu.schema.codegen.MapReader(kotlin.String,
        jp.co.soramitsu.schema.generated.datamodel.Value)))

    public override fun write(writer: ScaleCodecWriter, instance: Payload): Unit {
      jp.co.soramitsu.schema.generated.datamodel.account.Id.write(writer, instance.`accountId`)
      writer.write(io.emeraldpay.polkaj.scale.writer.ListWriter(Instruction),
          instance.`instructions`)
      writer.writeLong(instance.`creationTime`.toLong())
      writer.writeLong(instance.`timeToLiveMs`.toLong())
      writer.write(jp.co.soramitsu.schema.codegen.MapWriter(kotlin.String,
          jp.co.soramitsu.schema.generated.datamodel.Value), instance.`metadata`)
    }
  }
}
