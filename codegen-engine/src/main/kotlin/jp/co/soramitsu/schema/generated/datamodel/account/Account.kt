// Do not change. Autogenerated code
package jp.co.soramitsu.schema.generated.datamodel.account

import io.emeraldpay.polkaj.scale.ScaleCodecReader
import io.emeraldpay.polkaj.scale.ScaleReader
import jp.co.soramitsu.schema.generated.crypto.PublicKey
import jp.co.soramitsu.schema.generated.datamodel.metadata.Metadata
import jp.co.soramitsu.schema.generated.datamodel.permissions.PermissionToken
import kotlin.Pair
import kotlin.String
import kotlin.collections.List
import kotlin.collections.Set

/**
 * Account
 *
 * Generated from 'iroha_data_model::account::Account' regular structure
 */
public class Account(
  private val id: Id,
  private val assets: List<Pair<String, String>>,
  private val signatories: List<PublicKey>,
  private val permissionTokens: Set<PermissionToken>,
  private val signatureCheckCondition: SignatureCheckCondition,
  private val metadata: Metadata
) {
  public companion object READER : ScaleReader<Account> {
    public override fun read(reader: ScaleCodecReader): Account =
        Account(jp.co.soramitsu.schema.generated.datamodel.account.Id.READER.read(reader),
        kotlin.collections.List<kotlin.Pair<kotlin.String, kotlin.String>>.READER.read(reader),
        kotlin.collections.List<jp.co.soramitsu.schema.generated.crypto.PublicKey>.READER.read(reader),
        kotlin.collections.Set<jp.co.soramitsu.schema.generated.datamodel.permissions.PermissionToken>.READER.read(reader),
        jp.co.soramitsu.schema.generated.datamodel.account.SignatureCheckCondition.READER.read(reader),
        jp.co.soramitsu.schema.generated.datamodel.metadata.Metadata.READER.read(reader))
  }
}
