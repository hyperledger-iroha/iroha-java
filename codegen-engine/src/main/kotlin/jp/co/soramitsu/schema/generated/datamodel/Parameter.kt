// Do not change. Autogenerated code
package jp.co.soramitsu.schema.generated.datamodel

import io.emeraldpay.polkaj.scale.ScaleCodecReader
import io.emeraldpay.polkaj.scale.ScaleReader
import kotlin.Int

/**
 * Parameter
 *
 * Generated from 'iroha_data_model::Parameter' enum
 */
public abstract class Parameter {
  /**
   * @return Discriminator of variant in enum
   */
  public abstract fun discriminant(): Int

  /**
   * 'MaximumFaultyPeersAmount' variant
   */
  public class MaximumFaultyPeersAmount(
    private val maximumFaultyPeersAmount: Int
  ) : Parameter() {
    public override fun discriminant(): Int = 0

    public companion object READER : ScaleReader<MaximumFaultyPeersAmount> {
      public override fun read(reader: ScaleCodecReader): MaximumFaultyPeersAmount {
      }
    }
  }

  /**
   * 'BlockTime' variant
   */
  public class BlockTime(
    private val blockTime: Int
  ) : Parameter() {
    public override fun discriminant(): Int = 1

    public companion object READER : ScaleReader<BlockTime> {
      public override fun read(reader: ScaleCodecReader): BlockTime {
      }
    }
  }

  /**
   * 'CommitTime' variant
   */
  public class CommitTime(
    private val commitTime: Int
  ) : Parameter() {
    public override fun discriminant(): Int = 2

    public companion object READER : ScaleReader<CommitTime> {
      public override fun read(reader: ScaleCodecReader): CommitTime {
      }
    }
  }

  /**
   * 'TransactionReceiptTime' variant
   */
  public class TransactionReceiptTime(
    private val transactionReceiptTime: Int
  ) : Parameter() {
    public override fun discriminant(): Int = 3

    public companion object READER : ScaleReader<TransactionReceiptTime> {
      public override fun read(reader: ScaleCodecReader): TransactionReceiptTime {
      }
    }
  }
}
