// Do not change. Autogenerated code
package jp.co.soramitsu.schema.generated.datamodel.events.pipeline

import io.emeraldpay.polkaj.scale.ScaleCodecReader
import io.emeraldpay.polkaj.scale.ScaleCodecWriter
import io.emeraldpay.polkaj.scale.ScaleReader
import io.emeraldpay.polkaj.scale.ScaleWriter
import jp.co.soramitsu.schema.generated.crypto.Hash
import kotlin.Unit

/**
 * Event
 *
 * Generated from 'iroha_data_model::events::pipeline::Event' regular structure
 */
public class Event(
  private val entityType: EntityType,
  private val status: Status,
  private val hash: Hash
) {
  public companion object : ScaleReader<Event>, ScaleWriter<Event> {
    public override fun read(reader: ScaleCodecReader): Event =
        Event(jp.co.soramitsu.schema.generated.datamodel.events.pipeline.EntityType.read(reader),
        jp.co.soramitsu.schema.generated.datamodel.events.pipeline.Status.read(reader),
        jp.co.soramitsu.schema.generated.crypto.Hash.read(reader))

    public override fun write(writer: ScaleCodecWriter, instance: Event): Unit {
      jp.co.soramitsu.schema.generated.datamodel.events.pipeline.EntityType.write(writer,
          instance.`entityType`)
      jp.co.soramitsu.schema.generated.datamodel.events.pipeline.Status.write(writer,
          instance.`status`)
      jp.co.soramitsu.schema.generated.crypto.Hash.write(writer, instance.`hash`)
    }
  }
}
