// Do not change. Autogenerated code
package jp.co.soramitsu.schema.generated.datamodel.events

import io.emeraldpay.polkaj.scale.ScaleCodecReader
import io.emeraldpay.polkaj.scale.ScaleReader
import kotlin.Int

/**
 * EventSocketMessage
 *
 * Generated from 'iroha_data_model::events::EventSocketMessage' enum
 */
public abstract class EventSocketMessage {
  /**
   * @return Discriminator of variant in enum
   */
  public abstract fun discriminant(): Int

  /**
   * 'SubscriptionRequest' variant
   */
  public class SubscriptionRequest(
    private val subscriptionRequest:
        jp.co.soramitsu.schema.generated.datamodel.events.SubscriptionRequest
  ) : EventSocketMessage() {
    public override fun discriminant(): Int = 0

    public companion object READER : ScaleReader<SubscriptionRequest> {
      public override fun read(reader: ScaleCodecReader): SubscriptionRequest {
      }
    }
  }

  /**
   * 'SubscriptionAccepted' variant
   */
  public class SubscriptionAccepted : EventSocketMessage() {
    public override fun discriminant(): Int = 1
  }

  /**
   * 'Event' variant
   */
  public class Event(
    private val event: jp.co.soramitsu.schema.generated.datamodel.events.Event
  ) : EventSocketMessage() {
    public override fun discriminant(): Int = 2

    public companion object READER : ScaleReader<Event> {
      public override fun read(reader: ScaleCodecReader): Event {
      }
    }
  }

  /**
   * 'EventReceived' variant
   */
  public class EventReceived : EventSocketMessage() {
    public override fun discriminant(): Int = 3
  }
}
