// Do not change. Autogenerated code
package jp.co.soramitsu.schema.generated.datamodel.transaction

import io.emeraldpay.polkaj.scale.ScaleCodecReader
import io.emeraldpay.polkaj.scale.ScaleCodecWriter
import io.emeraldpay.polkaj.scale.ScaleReader
import io.emeraldpay.polkaj.scale.ScaleWriter
import jp.co.soramitsu.schema.generated.crypto.Signature
import jp.co.soramitsu.schema.generated.datamodel.events.pipeline.TransactionRejectionReason
import kotlin.Unit
import kotlin.collections.List

/**
 * RejectedTransaction
 *
 * Generated from 'iroha_data_model::transaction::RejectedTransaction' regular structure
 */
public class RejectedTransaction(
  private val payload: Payload,
  private val signatures: List<Signature>,
  private val rejectionReason: TransactionRejectionReason
) {
  public companion object : ScaleReader<RejectedTransaction>, ScaleWriter<RejectedTransaction> {
    public override fun read(reader: ScaleCodecReader): RejectedTransaction =
        RejectedTransaction(jp.co.soramitsu.schema.generated.datamodel.transaction.Payload.read(reader),
        reader.read(io.emeraldpay.polkaj.scale.reader.ListReader(Signature)),
        jp.co.soramitsu.schema.generated.datamodel.events.pipeline.TransactionRejectionReason.read(reader))

    public override fun write(writer: ScaleCodecWriter, instance: RejectedTransaction): Unit {
      jp.co.soramitsu.schema.generated.datamodel.transaction.Payload.write(writer,
          instance.`payload`)
      writer.write(io.emeraldpay.polkaj.scale.writer.ListWriter(Signature), instance.`signatures`)
      jp.co.soramitsu.schema.generated.datamodel.events.pipeline.TransactionRejectionReason.write(writer,
          instance.`rejectionReason`)
    }
  }
}
