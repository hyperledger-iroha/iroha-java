// Do not change. Autogenerated code
package jp.co.soramitsu.schema.generated.datamodel.transaction

import io.emeraldpay.polkaj.scale.ScaleCodecReader
import io.emeraldpay.polkaj.scale.ScaleCodecWriter
import io.emeraldpay.polkaj.scale.ScaleReader
import io.emeraldpay.polkaj.scale.ScaleWriter
import jp.co.soramitsu.schema.codegen.read
import jp.co.soramitsu.schema.codegen.write
import jp.co.soramitsu.schema.generated.crypto.Signature
import jp.co.soramitsu.schema.generated.datamodel.events.pipeline.TransactionRejectionReason
import kotlin.Unit
import kotlin.collections.List

/**
 * RejectedTransaction
 *
 * Generated from 'iroha_data_model::transaction::RejectedTransaction' regular structure
 */
public class RejectedTransaction(
  private val payload: Payload,
  private val signatures: List<Signature>,
  private val rejectionReason: TransactionRejectionReason
) : ScaleReader<RejectedTransaction>, ScaleWriter<RejectedTransaction> {
  public override fun read(reader: ScaleCodecReader): RejectedTransaction =
      RejectedTransaction(jp.co.soramitsu.schema.generated.datamodel.transaction.Payload.READER.read(reader),kotlin.collections.List<jp.co.soramitsu.schema.generated.crypto.Signature>.READER.read(reader),jp.co.soramitsu.schema.generated.datamodel.events.pipeline.TransactionRejectionReason.READER.read(reader))

  public override fun write(writer: ScaleCodecWriter, instance: RejectedTransaction): Unit {
    jp.co.soramitsu.schema.generated.datamodel.transaction.Payload.READER.read(reader),
    kotlin.collections.List<jp.co.soramitsu.schema.generated.crypto.Signature>.READER.read(reader),
    jp.co.soramitsu.schema.generated.datamodel.events.pipeline.TransactionRejectionReason.READER.read(reader)
  }
}
