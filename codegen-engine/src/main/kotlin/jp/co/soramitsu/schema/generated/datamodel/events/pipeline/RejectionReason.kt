// Do not change. Autogenerated code
package jp.co.soramitsu.schema.generated.datamodel.events.pipeline

import io.emeraldpay.polkaj.scale.ScaleCodecReader
import io.emeraldpay.polkaj.scale.ScaleCodecWriter
import io.emeraldpay.polkaj.scale.ScaleReader
import io.emeraldpay.polkaj.scale.ScaleWriter
import kotlin.Int
import kotlin.Unit

/**
 * RejectionReason
 *
 * Generated from 'iroha_data_model::events::pipeline::RejectionReason' enum
 */
public abstract class RejectionReason {
  /**
   * @return Discriminator of variant in enum
   */
  public abstract fun discriminant(): Int

  /**
   * 'Block' variant
   */
  public class Block(
    private val block: BlockRejectionReason
  ) : RejectionReason() {
    public override fun discriminant(): Int = 0

    public companion object CODEC : ScaleReader<Block>, ScaleWriter<Block> {
      public override fun read(reader: ScaleCodecReader): Block {
      }

      public override fun write(writer: ScaleCodecWriter, instance: Block): Unit {
        writer.directWrite(this.discriminant())
        BlockRejectionReason.write(writer, instance.block)
      }
    }
  }

  /**
   * 'Transaction' variant
   */
  public class Transaction(
    private val transaction: TransactionRejectionReason
  ) : RejectionReason() {
    public override fun discriminant(): Int = 1

    public companion object CODEC : ScaleReader<Transaction>, ScaleWriter<Transaction> {
      public override fun read(reader: ScaleCodecReader): Transaction {
      }

      public override fun write(writer: ScaleCodecWriter, instance: Transaction): Unit {
        writer.directWrite(this.discriminant())
        TransactionRejectionReason.write(writer, instance.transaction)
      }
    }
  }
}
