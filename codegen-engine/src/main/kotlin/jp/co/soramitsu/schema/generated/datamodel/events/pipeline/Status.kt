// Do not change. Autogenerated code
package jp.co.soramitsu.schema.generated.datamodel.events.pipeline

import io.emeraldpay.polkaj.scale.ScaleCodecReader
import io.emeraldpay.polkaj.scale.ScaleCodecWriter
import io.emeraldpay.polkaj.scale.ScaleReader
import io.emeraldpay.polkaj.scale.ScaleWriter
import kotlin.Int
import kotlin.Unit

/**
 * Status
 *
 * Generated from 'iroha_data_model::events::pipeline::Status' enum
 */
public abstract class Status {
  /**
   * 'Validating' variant
   */
  public class Validating : Status(), ScaleReader<Validating>, ScaleWriter<Validating> {
    public override fun read(reader: ScaleCodecReader): Validating {
    }

    public override fun write(writer: ScaleCodecWriter, instance: Validating): Unit {
    }

    public companion object {
      public const val DISCRIMINANT: Int = 0
    }
  }

  /**
   * 'Rejected' variant
   */
  public class Rejected(
    private val rejected: RejectionReason
  ) : Status(), ScaleReader<Rejected>, ScaleWriter<Rejected> {
    public override fun read(reader: ScaleCodecReader): Rejected {
    }

    public override fun write(writer: ScaleCodecWriter, instance: Rejected): Unit {
    }

    public companion object {
      public const val DISCRIMINANT: Int = 1
    }
  }

  /**
   * 'Committed' variant
   */
  public class Committed : Status(), ScaleReader<Committed>, ScaleWriter<Committed> {
    public override fun read(reader: ScaleCodecReader): Committed {
    }

    public override fun write(writer: ScaleCodecWriter, instance: Committed): Unit {
    }

    public companion object {
      public const val DISCRIMINANT: Int = 2
    }
  }
}
