name: iroha-java CI

on:
  push:

env:
  BUILD_DIR: client/build
  SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
  CODECOV_TOKEN: ${{ secrets.CODECOV_TOKEN }}
  CACHE_VERSION: v01
  CACHE_PATHS: |
    ~/.gradle/caches
    ~/.gradle/wrapper
jobs:
  Linux:
    strategy:
      fail-fast: false
    runs-on: ubuntu-20.04
    steps:
      - uses: actions/checkout@v2
      - uses: actions/cache@v2
        with:
          path: ${{ env.CACHE_PATHS }}
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
          restore-keys: |
            ${{ runner.os }}-gradle-
      - name: Set up JDK 1.8
        uses: actions/setup-java@v1
        with:
          java-version: 1.8
      - name: Build with Gradle
        run: |
          ./gradlew --daemon
          ./gradlew build --parallel --build-cache
          ./gradlew jacocoTestReport
      - name: Cleanup Gradle Cache
        run: |
          rm -f ~/.gradle/caches/modules-2/modules-2.lock
          rm -f ~/.gradle/caches/modules-2/gc.properties
      - name: Codecov
        uses: codecov/codecov-action@v1.2.1        
      - name: Sonar
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
          SORABOT_GITHUB_TOKEN: ${{ secrets.SORABOT_GITHUB_TOKEN }}
          BRANCH_NAME: ${{ github.ref }}
        run: if [[ -n $SONAR_TOKEN && -n $SORABOT_GITHUB_TOKEN ]]; then ./housekeeping/sonar.sh; else echo "Some secret undefined. Step passed..."; fi